name: Build & test

on:
  pull_request:
    branches:
      - master

jobs:
  rust-test:
    runs-on: ubuntu-latest

    steps:
      - name: ðŸ›Ž Checkout
        uses: actions/checkout@v2

      - name: ðŸ”¨ Install system dependancies
        run: |
          sudo apt install -y clang libclang-dev libopencv-dev

      - name: ðŸ”§ Install stable toolchain
        uses: actions-rs/toolchain@b2417cde72dcf67f306c0ae8e0828a81bf0b189f
        with:
          profile: minimal
          toolchain: stable

      - name: âš¡ Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            rust/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('./rust/Cargo.lock') }}

      - name: âš™ Run backend tests
        run: make tests

  frontend-test:
    runs-on: ubuntu-latest

    steps:
      - name: ðŸ›Ž Checkout
        uses: actions/checkout@v2

      - name: ðŸ”§ Install yarn
        run: npm install -g yarn

      - name: Get yarn cache path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: âš¡ NPM Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}

      - name: ðŸ”§ Install dependancies
        run: yarn

  build:
    runs-on: ubuntu-latest
    needs: rust-test

    steps:
      - name: ðŸ›Ž Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}

      - name: ðŸ”§ Install stable toolchain
        uses: actions-rs/toolchain@b2417cde72dcf67f306c0ae8e0828a81bf0b189f
        with:
          profile: minimal
          toolchain: stable

      - name: âš¡ Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            rust/target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('./rust/Cargo.lock') }}

      - name: âš™ Run collector
        run: make collector

      - name: âš™ Run cleaner
        run: make cleaner

      - name: ðŸ“Œ Commit changes
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git commit -am "Update data" || true
          git push
